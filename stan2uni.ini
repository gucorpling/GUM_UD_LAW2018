;;;Configuration file to convert Stanford Typed Dependencies to Universal Dependencies
;;;Note not all aspects of universal dependencies are covered, especially handling of the 'flat' label requires NER information assumed below

;handle free relatives such as "an expectation of what to do" (change pcomp to pobj+rcmod)
func=/prep/;pos=/^W.*/;func=/pcomp/	#1>#3;#3>#2	#2:func=pobj;#1>#2;#2>#3;#3:func=rcmod

;simple rename
func=/^acomp/	none	#1:func=xcomp
pos=/^(JJ|V).*/;func=/^npadvmod/	#1>#2	#2:func=obl:npmod
func=/^npadvmod/	none	#1:func=nmod:npmod
func=/^num/	none	#1:func=nummod
func=/^rcmod/	none	#1:func=acl:relcl
func=/^dobj/	none	#1:func=obj
pos=/DT/&func=/^neg/	none	#1:func=det
func=/^neg/	none	#1:func=advmod
func=/preconj/	none	#1:func=cc:preconj
func=/^quantmod/	none	#1:func=advmod
pos=/V.*|J.*/;func=/^tmod/	#1>#2	#2:func=obl:tmod
func=/^tmod/	none	#1:func=nmod:tmod
func=/^predet/	none	#1:func=det:predet
func=/^possessive/	none	#1:func=case
func=/^poss$/	none	#1:func=nmod:poss
func=/^prt/	none	#1:func=compound:prt
func=/^auxpass/	none	#1:func=aux:pass
func=/^csubjpass/	none	#1:func=csubj:pass
func=/^nsubjpass/	none	#1:func=nsubj:pass

;disambiguate nn
func=/nn/&pos=/JJ/	none	#1:func=amod
func=/nn/&pos=/DT/	none	#1:func=det

;clauses (handling vmod)
pos=/^[NJ].*|CD|DT|FW|PP|WP/;pos=/^V.*/&func=/vmod/	#1>#2	#2:func=acl
pos=/^V.*/;pos=/^V.[GN]$/&func=/vmod/	#1>#2	#2:func=advcl
pos=/^V.*/;pos=/^V.$/&func=/vmod/	#1>#2	#2:func=advcl
pos=/^V.*/;func=/vmod/;func=/cop/	#1>#2>#3	#2:func=advcl

;appos chaining (UD sources appos on the first node, like conj)
func=/.*/;func=/appos/;func=/appos/	#1>#2>#3	#1>#3

; Handle flat 
; First deal with person entities based on 'person' in the morph field (example: actor Bob A B C D Smith)
; Step 1	let Bob dominate all ABCD
; Non-sentence-initial
pos!=/N?NP.*/;pos=/N?NP.*/&func=/nn/;pos=/N?NP.*/&func=/nn/;pos=/N?NP.*/&morph=/(.*person.*)/	#1.#2.*#3.*#4;#4>#2;#4>#3	#2>#3;#3:func=flat
; Sentence-initial
pos=/N?NP.*/&func=/nn/&position=/first/;pos=/N?NP.*/&func=/nn/;pos=/N?NP.*/&morph=/(.*person.*)/	#1.*#2.*#3;#3>#1;#3>#2	#1>#2;#2:func=flat

; Step 2	let anything previously dominated by Smith now by Bob
pos=/.*/;pos=/N?NP.*/&func=/nn/;pos=/N?NP.*/&morph=/(.*person.*)/	#1.*#2.*#3;#3>#1;#3>#2	#2>#1

; Step 3 let Bob dominate Smith and receive func, morph information from Smith
; Head has parent
func=/.*/;pos=/N?NP.*/&func=/nn/&morph=/(.*)/;pos=/N?NP.*/&func=/(.*)/&morph=/(.*person.*)/	#2.*#3;#3>#2;#1>#3	#1>#2;#2>#3;#2:func=$2;#2:morph=$3;#3:func=flat;#3:morph=$1
; Head has no parent
pos=/N?NP.*/&func=/nn/&morph=/(.*)/;pos=/N?NP.*/&func=/(root)/&morph=/(.*person.*)/	#1.*#2;#2>#1	#1>#2;#1:func=$2;#1:morph=$3;#1:head=0;#2:func=flat;#2:morph=$1

; Step 4 move head of flat fountain to actor if the entity is a person, morph and func info also moved to actor
func=/nn/;pos=/N?NP.*/&morph=/(.*person.*)/&func=/(.*)/&head=/(.*)/;func=/flat/	#1.#2.*#3;#2>#1;#2>#3	#1>#2;#1>#3;#1:morph=$1;#1:func=$2;#1:head=$3;#2:func=flat;#2:morph=_

; Step 4.5: old flat analysis for non-person - currently disabled
;func=/nn/;func=/nn/;text=/.*/	#1.#2;#3>#2;#3>#1	#1>#2;#2:func=flat
;pos=/N?NP.*|FW/&func=/nn/;pos=/N?NP.*|FW/&func=/(.*)/;text=/.*/	#2>#1;#3>#2	#1>#2;#2:func=flat;#3>#1;#1:func=$1
;pos=/N?NP.*|FW/&func=/nn/;pos=/N?NP.*|FW/&func=/(root)/	#2>#1	#1>#2;#2:func=flat;#1:head=0;#1:func=$1

; Step 5 cleaning: whatever dominated by flat will be by its parent
; Precedence shouldn't matter for this step, since flat never dominates anything
func=/.*/;func=/.*/;func=/flat/	#3>#1;#2>#3	#2>#1

; all rest nn become compound
func=/nn/	none	#1:func=compound


;to-infinitive
text=/^[Tt]o$/&func=/aux/	none	#1:func=mark

;adverbial clause modifying a nominal
pos=/^(N.*|P.*)$/;pos=/[NV].*/&func=/advcl/	#1>#2	#2:func=acl

;reverse fixed
func=/^mwe$/;func=/(.*)/;func=/.*/	#3>#2>#1;#1.1,3#2	#3>#1;#1>#2;#2:func=fixed;#1:func=$1
func=/^mwe$/	none	#1:func=fixed

;handle copula
;protect expletive existential first
func=/expl/;lemma=/be/	#2>#1	#2:morph=EXIST
;now convert copula cases
func=/nsubj|csubj/;lemma=/be/&morph!=/EXIST/&func=/(ccomp|parataxis|advcl|rcmod)/;func=/prep|pcomp/;func=/pobj/;text=/.*/	#2>#1;#2>#3>#4;#5>#2	#4>#1;#4>#2;#4>#3;#3:func=case;#4:func=$1;#2:func=cop;#5>#4
;spatiotemporal predicate PP with copula - note the PP must follow the copula closely, otherwise it might be a spatiotemporal adverbial PP modifier of cop, not a predicate
func=/nsubj|csubj/;lemma=/be/&morph!=/EXIST/&func=/root/;func=/prep|pcomp/;func=/pobj/	#2>#1;#2>#3>#4;#2.1,3#3	#4>#1;#4>#2;#4>#3;#3:func=case;#2:func=cop;#4:func=root;#4:head=0
;same for adverb if we're sure it's a clause level predicate
func=/nsubj|csubj/;lemma=/be/&morph!=/EXIST/&func=/root/;func=/advmod/;text=/.*/	#2>#1;#2>#3;#2.1,3#3;#4>#2	#3>#1;#3>#2;#4>#3;#2:func=cop;#3:func=root;#3:head=0
func=/nsubj|csubj/;lemma=/be/&morph!=/EXIST/&func=/(advcl|^acl.*|conj|parataxis)/;func=/advmod/;text=/.*/	#2>#1;#2>#3;#2.1,3#3;#4>#2	#3>#1;#3>#2;#4>#3;#2:func=cop;#3:func=$1
;restore existential case
morph=/EXIST/	none	#1:morph=_
;dependents of cop are dependents of its parent
func=/.*/;func=/cop/;func=/.*/	#1>#2>#3	#1>#3

;TODO: handle copula without lemma (for corpora without gold lemmas)


;prepositional phrases
;prep + pcomp + pobj
func=/.*/;func=/prep/;func=/pcomp/;func=/pobj/	#1>#2>#3>#4	#4>#3;#3:func=case;#4:func=advcl;#4>#2;#2:func=mark;#1>#4
;take care of adnominal pcomp, should become acl (e.g. "mirrors for correcting your pose")
pos=/^N.*|FW|DT/;func=/prep/;func=/pcomp/	#1>#2>#3	#1>#3;#3>#2;#2:func=mark;#3:func=acl
;simple pobj
func=/.*/;func=/^prep$/;func=/pobj/	#1>#2>#3	#3>#2;#2:func=case;#3:func=nmod;#1>#3
;root has prep
pos=/^N.*/&func=/^root$/;func=/prep/;func=/pobj/	#1>#2>#3	#1>#3;#3>#2;#2:func=case;#3:func=nmod
pos!=/^N.*/&func=/^root$/;func=/prep/;func=/pobj/	#1>#2>#3	#1>#3;#3>#2;#2:func=case;#3:func=obl
; (Logan_2018/01/17) simple pobj when headed not by prep (including headed by root, conj, etc.)
func=/(.*)/&head=/(.*)/;func=/pobj/	#1>#2	#2>#1;#1:func=case;#2:func=$1;#2:head=$2

;pcomp without mark
pos=/^N.*|FW|DT/;func=/^prep$/;func=/pcomp/	#1>#2>#3	#3>#2;#2:func=_temp;#3:func=acl;#1>#3
func=/.*/;func=/^prep$/;func=/pcomp/	#1>#2>#3	#3>#2;#2:func=_temp;#3:func=advcl;#1>#3
;(Logan_2018/01/18) coordinated pcomp without mark
func=/.*/;func=/conj/;func=/pcomp/	#1>#2>#3	#3>#2;#1>#3;#3:func=conj;#2:func=_temp
;(Logan_2018/01/17) pcomp without mark for root preps
func=/^root$/;func=/pcomp/	#1>#2	#2>#1;#2:func=root;#1:func=_temp;#2:head=0
;pcomp with mark
func=/^N.*|FW|DT/;func=/^prep$/;func=/pcomp/;func=/mark/	#1>#2>#3>#4	#3>#2;#2:func=case;#3:func=acl;#1>#3
func=/.*/;func=/^prep$/;func=/pcomp/;func=/mark/	#1>#2>#3>#4	#3>#2;#2:func=case;#3:func=advcl;#1>#3

; remaining '_temp' turns into 'mark'
func=/_temp/	none	#1:func=mark


;reverse conjunction 
func=/.*/;func=/^cc$/;func=/^conj$/	#1>#2;#1>#3	#3>#2

;fix double coordination results in cc attaching to crossed third conjunct
func=/.*/;func=/^cc$/;func=/^conj$/;func=/^conj$/	#1.*#2.*#3.*#4;#1>#3;#1>#4;#4>#2	#3>#2


;prep for verbal predicate with pcomp
pos=/^V.*|^J.*/;func=/prep/;func=/pcomp/	#1>#2>#3	#1>#3;#3>#2;#2:func=mark;#3:func=advcl


;handle obj & xcomp (instead of nsubj of subclause in SD)
func=/.*/;func=/nsubj/;func=/xcomp/	#1>#3;#3>#2;#1.*#2	#1>#2;#2:func=obj


;Promote remaining preps, which probably don't have a pobj, to nmod (which subsequently goes to obl if necessary)
func=/.*/;func=/^prep$/	#1>#2	#2:func=nmod

;if there was conj on a preposition, move it
text=/.*/;func=/case/;func=/conj/	#1>#2>#3	#1>#3
;handle coordinate prepositions with single object ("within and across universities")
func=/case/;func=/cc/;func=/conj/;text=/.*/	#4>#1;#4>#3>#2;#3.*#4	#1>#3

;handle nmod of predicates (should be obl)
pos=/^(V.*|J.*)$/;func=/nmod/	#1>#2	#2:func=obl

;complex numbers analyzed as compound
func=/^number/	none	#1:func=compound

;fix prepositions inside relatives which still have nsubj or cop: "which is what the joke is about"
func=/acl.*/;func=/case/;func=/nsubj|cop/	#1>#2>#3	#1>#3

;known disfluency patterns in GUM
text=/^and$/&func=/dep/;text=/.*/	#1.#2	#1:func=reparandum;#2>#1
pos=/POS/&func=/dep/;text=/.*/	#1.#2	#1:func=reparandum;#2>#1
text=/^(that|of)$/&func=/dep/;text=/^(it|of)$/	#1.#2	#1:func=reparandum;#2>#1

;universal POS tags
cpos=/JJ[RS]?/	none	#1:pos=ADJ
cpos=/WRB/	none	#1:pos=SCONJ
cpos=/RB[RS]?/&lemma!=/n.?t/	none	#1:pos=ADV
cpos=/RB/&lemma=/n.?t/	none	#1:pos=PART
cpos=/UH/	none	#1:pos=INTJ
cpos=/CC/	none	#1:pos=CCONJ
cpos=/CD/	none	#1:pos=NUM
cpos=/NNS?/	none	#1:pos=NOUN
text=/%/	none	#1:pos=SYM
cpos=/NNPS?/	none	#1:pos=PROPN
cpos=/V.*/	none	#1:pos=VERB
func=/.*aux.*|cop/	none	#1:pos=AUX
cpos=/IN|RP|TO/&func!=/mark/	none	#1:pos=ADP
func=/mark/	none	#1:pos=SCONJ
func=/(pre)?det/	none	#1:pos=DET
cpos=/POS|TO/&func!=/case/	none	#1:pos=PART
cpos=/PRP\$?|WP\$?|EX|W?DT/&func!=/det/	none	#1:pos=PRON
func=/punct/	none	#1:pos=PUNCT
cpos=/FW|LS/	none	#1:pos=X
cpos=/MD/	none	#1:pos=AUX
cpos=/SENT/	none	#1:pos=PUNCT
cpos=/POS/	none	#1:pos=PART
cpos=/\$/	none	#1:pos=SYM
cpos=/-[RL][SR]B-/	none	#1:pos=PUNCT

;clear morph
morph=/.*/	none	#1:morph=_

